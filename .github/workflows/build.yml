name: Build and Release CodeX v1.0.3

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install & Build (Linux)
        run: |
          npm ci
          npm run make
        env:
          E2E_TEST_BUILD: "true"
      - name: Debug Build Output (Linux)
        run: |
          echo "=== Build Output Structure ==="
          find out/ -type f -name "*.deb" -o -name "*.rpm" | head -10
          echo "=== Full out directory structure ==="
          find out/ -type d | head -20
      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            out/make/deb/x64/*.deb
            out/make/rpm/x64/*.rpm

  build-macos:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install & Build (macOS)
        run: |
          npm ci
          npm run make
        env:
          E2E_TEST_BUILD: "true"
      - name: Debug Build Output (macOS)
        run: |
          echo "=== Build Output Structure ==="
          find out/ -type f -name "*.zip" | head -10
          echo "=== Full out directory structure ==="
          find out/ -type d | head -20
      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: |
            out/make/zip/darwin/arm64/*.zip
            out/make/zip/darwin/x64/*.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install & Build (Windows)
        run: |
          npm ci
          npm run make
        env:
          E2E_TEST_BUILD: "true"
      - name: Debug Build Output (Windows)
        run: |
          echo "=== Build Output Structure ==="
          Get-ChildItem -Path "out" -Recurse -Include "*.exe", "*.zip" | Select-Object -First 10 | ForEach-Object { $_.FullName }
          echo "=== Full out directory structure ==="
          Get-ChildItem -Path "out" -Recurse -Directory | Select-Object -First 20 | ForEach-Object { $_.FullName }
      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            out/make/squirrel.windows/x64/*.exe
            out/make/zip/win32/x64/*.zip

  publish:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: artifacts/
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos
          path: artifacts/
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: artifacts/
      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v1.0.3
          name: Release v1.0.3
          owner: iotserver24
          repo: codex
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          makeLatest: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            artifacts/*.deb
            artifacts/*.rpm
            artifacts/*.zip
            artifacts/*.exe
